<?xml version='1.0' encoding='UTF-8'?>
<!-- Schema file written by PDE -->
<schema targetNamespace="nl.utwente.ce.imageexport" xmlns="http://www.w3.org/2001/XMLSchema">
<annotation>
      <appinfo>
         <meta.schema plugin="nl.utwente.ce.imageexport" id="nl.utwente.ce.imageexport.exportFormatProvider" name="Format Provider"/>
      </appinfo>
      <documentation>
         Registers a new image exporter, being able to export a GEF diagram to one (or more) image formats.
      </documentation>
   </annotation>

   <element name="extension">
      <annotation>
         <appinfo>
            <meta.element />
         </appinfo>
      </annotation>
      <complexType>
         <sequence minOccurs="1" maxOccurs="unbounded">
            <element ref="image_format"/>
         </sequence>
         <attribute name="point" type="string" use="required">
            <annotation>
               <documentation>
                  
               </documentation>
            </annotation>
         </attribute>
         <attribute name="id" type="string">
            <annotation>
               <documentation>
                  
               </documentation>
            </annotation>
         </attribute>
         <attribute name="name" type="string">
            <annotation>
               <documentation>
                  
               </documentation>
               <appinfo>
                  <meta.attribute translatable="true"/>
               </appinfo>
            </annotation>
         </attribute>
      </complexType>
   </element>

   <element name="image_format">
      <complexType>
         <attribute name="id" type="string">
            <annotation>
               <documentation>
                  Id of the current format, used to identify to the image format provide which format is active (useful when multiple formats are provided by the same class)
               </documentation>
            </annotation>
         </attribute>
         <attribute name="name" type="string" use="required">
            <annotation>
               <documentation>
                  Name of the image format
               </documentation>
               <appinfo>
                  <meta.attribute translatable="true"/>
               </appinfo>
            </annotation>
         </attribute>
         <attribute name="extensions" type="string" use="required">
            <annotation>
               <documentation>
                  Comma separated list of file extensions that are associated with the image format.
Place the preferred extension first, it will be used as default for the export image filename.
               </documentation>
            </annotation>
         </attribute>
         <attribute name="class" type="string" use="required">
            <annotation>
               <documentation>
                  Class that provides the interface to the ImageExport plugin
               </documentation>
               <appinfo>
                  <meta.attribute kind="java" basedOn=":nl.utwente.ce.imageexport.IImageFormatProvider"/>
               </appinfo>
            </annotation>
         </attribute>
      </complexType>
   </element>


   <annotation>
      <appinfo>
         <meta.section type="examples"/>
      </appinfo>
      <documentation>
         The following is an example of an extension that provides a JPEG IamgeExport format:
&lt;p&gt;
&lt;pre&gt;
&lt;extension
      name=&quot;Bitmap Image Exporter&quot;
      point=&quot;nl.utwente.ce.imageexport.exportFormatProvider&quot;&gt;
   &lt;image_format
      class=&quot;nl.utwente.ce.imageexport.export.bitmap.ExportBitmap&quot;
      extensions=&quot;jpg,jpeg&quot;
      id=&quot;Bitmap.JPEG&quot;
      name=&quot;JPEG Image&quot;&gt;
   &lt;/image_format&gt;
&lt;/extension&gt;
&lt;/pre&gt;
&lt;/p&gt;
      </documentation>
   </annotation>

   <annotation>
      <appinfo>
         <meta.section type="apiinfo"/>
      </appinfo>
      <documentation>
         The value of the class attribute must be a name of the class that implements nl.utwente.ce.imageexport.IImageFormatProvider
      </documentation>
   </annotation>



</schema>
